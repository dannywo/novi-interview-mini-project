@model IEnumerable<NoviInterviewMiniProject.Models.MemberResult>

@{
    ViewBag.Title = "Theme Park Members";
}

<h2>Theme Park Members</h2>

<div class="row">
    <div class="col-md-5"><div class="form-group">
    <label for="search">Filter by name</label>
    <input type="text" class="form-control" id="search" placeholder="Enter Name">
</div>
    </div>
</div>
<div class="row">

    @foreach (var item in Model)
    {
        <div class="col-md-6 parent-panel">
            <div class="panel panel-primary">
                <div class="panel-heading">
                        <h4 class="member-name">@Html.DisplayFor(modelItem => item.Name)</h4> 
                        <span>
                            (@Html.DisplayFor(modelItem => item.CustomerType))
                        </span>
                </div>
                <div class="panel-body">
                    <div class="col-md-4">
                        <img src="@item.Image" class="img-responsive" />
                    </div>
                    <div class="col-md-8">
                        <dl class="dl-horizontal">
                            <dt>
                                @Html.DisplayNameFor(model => model.Email)
                            </dt>
                            <dd>
                                @Html.DisplayFor(modelItem => item.Email)
                            </dd>
                            <dt>
                                @Html.DisplayNameFor(model => model.Phone)
                            </dt>
                            <dd>
                                @Html.DisplayFor(modelItem => item.Phone)
                            </dd>
                            <dt>
                                @Html.DisplayNameFor(model => model.MemberSince)
                            </dt>
                            <dd>
                                @Html.DisplayFor(modelItem => item.MemberSince)
                            </dd>
                            <dt>
                                @Html.DisplayNameFor(model => model.MemberStatus)
                            </dt>
                            <dd>
                                @Html.DisplayFor(modelItem => item.MemberStatus)
                            </dd>
                        </dl>
                    </div>
                </div>
            </div>
        </div>
    }
</div>
<script>
    let searchEl = document.querySelector("#search");
    const panelList = document.querySelectorAll(".parent-panel");

    searchEl.addEventListener("keyup", () => {

        let searchFilter = searchEl.value.toLowerCase();

        // lopp through all panels, and hide non matching
        for (i = 0; i < panelList.length; i++) {
            header = panelList[i].querySelector(".panel-heading .member-name");
            txtVal = header.textContent || header.innerText;

            if (txtVal.toLowerCase().indexOf(searchFilter) > -1) {
                panelList[i].style.display = "";
            } else {
                panelList[i].style.display = "none";
            }
        }

    })

</script>
